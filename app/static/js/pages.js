// Generated by CoffeeScript 1.4.0
var PagesCtrl, pages;

PagesCtrl = function($scope, $resource, $rootScope) {
  $scope.menu_language = false;
  $scope.tab_language = $rootScope.lan;
  $scope.name_language = $rootScope.language;
  $scope.list_labels = [];
  $("[data-toggle=dropdown]").blur(function() {
    return $scope.menu_language = false;
  });
  $scope.menu_reveal = function() {
    return $scope.menu_language = !$scope.menu_language;
  };
  $scope.change_language = function(code, name_language) {
    $scope.tab_language = code;
    return $scope.name_language = name_language;
  };
  $scope.add_label = function() {
    var label;
    label = {
      type: 1
    };
    return $scope.list_labels.push(label);
  };
  $scope.change_label = function(index, type) {
    console.log(index + "   " + type);
    return $scope.list_labels[index]["type"] = type;
  };
  return $scope.remove_label = function(index) {
    console.log(index);
    return $scope.list_labels.splice(index, 1);
  };
};

pages = {
  init_language: function() {
    var button_languages, list_languages_in_menu;
    button_languages = t.get(".button-lng");
    return list_languages_in_menu = t.get(".dropdown-lng .dropdown-menu li");
  },
  number_of_label: 0,
  code_languages: [],
  name_languages: {},
  init_change_name_label: function() {
    return t.get(".name_label").on("keyup", function(e) {
      var label_num, label_press, label_value;
      label_press = e.currentTarget;
      label_value = label_press.value;
      label_num = label_press.className.split("_")[4];
      t.get(".label_en_name_" + label_num).value(label_value);
      return t.get(".label_it_name_" + label_num).value(label_value);
    });
  }
};

PagesCtrl.$inject = ["$scope", "$resource", "$rootScope"];
